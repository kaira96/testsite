###################################


Django
Введение
Установка вирт окруж
Установка Джанго
Установка Приложения
Настройка /mysite/settings.py
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    #Можем так 'news',
    #Но лучше указать конфигурации 'news.apps.NewsConfig'
]
 MVC
######################################



Контороллеры и маршруты
/news/views.py
############################1
from django.http import HttpResponse
############################2
Контроллер функций
def index(requests):
    print(requests)
    return HttpResponse('Hello World')
/mysite/urls.py
############################3
from news.views import index
/mysite - правой кнопкой мыши и Mark Directory as Source Root
urlpatterns = [
    path('admin/', admin.site.urls),
############################4
    path('news/', index,),
]
/news/views.py
# ############################5
# def index(requests):
#     print(dir(requests))
#     return HttpResponse('Hello World')
############################6
def index(requests):
    return HttpResponse('Hello World')

def test(requests):
    return HttpResponse('<h1>Тестовая страница</h1>')
/mysite/urls.py
urlpatterns = [
    path('admin/', admin.site.urls),
############################7
    path('news/', index,),
    path('test/', test,),
]
############################8
from news.views import *
############################9
from django.urls import path, include
urlpatterns = [
    path('admin/', admin.site.urls),
############################10
    path('news/', include('news.urls'))
]
Создаем новый файл в /news/urls.py
/news/urls.py
############################11
from django.urls import path
urlpatterns = [
############################12
    path('', index)
]
############################13
from .views import *
urlpatterns = [
############################14
    path('', index),
    path('test/', test),
]
##############################################




Модели
/news/models.py
###################################15
class News(models.Model):
    title = models.CharField(max_length=150) #varchar 255
    content = models.TextField(blank=True) #не обяз к заполнению
    created_at = models.DateTimeField(auto_now_add=True) #значение поля меняться не будет
    update_at = models.DateTimeField(auto_now=True)  #когда в последнее время менялась запись
    photo = models.ImageField(upload_to='photos/%Y/%m/%d') #будет создан файл картинки с годом месяцем и днем создания
    is_published = models.BooleanField(default=True)
###############################################




Миграции
При запуске может ругаться на модель /news/models.py/News/photo
и просить установить Pollow так как ImageField работает с 
этой библиотекой
python manage.py makemigrations
Migrations for 'news':
  news/migrations/0001_initial.py
    - Create model News
Для создания таблицы в SQLite
python manage.py sqlmigrate news 0001
BEGIN;
--
-- Create model News
--
CREATE TABLE "news_news" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "title" varchar(150) NOT NULL, "content" text NOT NULL, "created_at" datetime NOT NULL, "update_at" datetime NOT NULL, "photo" varchar(100) NOT NULL, "is_published" bool NOT NULL);
COMMIT;
python manage.py migrate
/mysite/settings.py
####################################16
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'
/mysite/urls.py
#############################17
if settings.DEBUG:
    urlpatterns += static
##############################18
from django.conf import settings
from django.conf.urls.static import static
#############################19
if settings.DEBUG:
    urlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)
#####################################################




CRUD p1 CREATE
ORM
python manage.py shell
from news.models import News
>>> from news.models import News
>>> News(title='Новость 1', content='Контент новости 1')
<News: News object (None)>
>>> news1 = _
>>> news1
<News: News object (None)>
>>> news1.title
'Новость 1'
>>> news1.id
>>> news1.save()
>>> news1.id
1
>>> from django.db import connection
>>> connection.queries
[{'sql': 'INSERT INTO "news_news" ("title", "content", "created_at", "update_at", "photo", "is_published") VALUES (\'Новость 1\', \'Контент новости 1\', \'2021-02-23 10:19:44.514536\', \'2021-02-23 10:19:44.514652\', \'\', 1)', 'time': '0.005'}]
>>> news1.pk
1
>>> news2 = News(title='Новость 2', content='Контент новости 2')
>>> connection.queries
[{'sql': 'INSERT INTO "news_news" ("title", "content", "created_at", "update_at", "photo", "is_published") VALUES (\'Новость 1\', \'Контент новости 1\', \'2021-02-23 10:19:44.514536\', \'2021-02-23 10:19:44.514652\', \'\', 1)', 'time': '0.005'}]
>>> news2.save()
>>> connection.queries
[{'sql': 'INSERT INTO "news_news" ("title", "content", "created_at", "update_at", "photo", "is_published") VALUES (\'Новость 1\', \'Контент новости 1\', \'2021-02-23 10:19:44.514536\', \'2021-02-23 10:19:44.514652\', \'\', 1)', 'time': '0.005'}, {'sql': 'INSERT INTO "news_news" ("title", "content", "created_at", "update_at", "photo", "is_published") VALUES (\'Новость 2\', \'Контент новости 2\', \'2021-02-23 10:26:40.409632\', \'2021-02-23 10:26:40.409715\', \'\', 1)', 'time': '0.007'}]
>>> news3 = News()
>>> news3.title = 'Новость 3'
>>> news3.content = 'Контент новости 3'
>>> news3.save()
>>> news4 = News.objects.create(title='Новость 4', content='Контент новости 4')
>>> news4.pk
4
>>> News.objects.create(title='Новость 5', content='Контент новости 5')
<News: News object (5)>
#######################################################




CRUD p2 READ
ORM
>>> News.objects.all()
<QuerySet [<News: News object (1)>, <News: News object (2)>, <News: News object (3)>, <News: News object (4)>, <News: News object (5)>]>
/news/models.py/News/
###################################20
    def __str__(self):
        return self.title 
>>> exit()
>>> from news.models import News
>>> News.objects.all()
<QuerySet [<News: Новость 1>, <News: Новость 2>, <News: Новость 3>, <News: Новость 4>, <News: Новость 5>]>
>>> news = _
>>> news
<QuerySet [<News: Новость 1>, <News: Новость 2>, <News: Новость 3>, <News: Новость 4>, <News: Новость 5>]>
>>> for item in news:
...     print(item.title, item.is_published)
... 
Новость 1 True
Новость 2 True
Новость 3 True
Новость 4 True
Новость 5 True
>>> News.objects.create(title='News 5', content='News 6 content')
<News: News 5>
>>> from news.models import News
>>> News.objects.filter(title='News 5', content = 'News 6 content')
<QuerySet [<News: News 5>]>
>>> News.objects.filter(title='News 6')
<QuerySet []>
>>> News.objects.get(pk=5)
<News: Новость 5>
>>> News.objects.get(title='News 5')
<News: News 5>
UPDATE
>>> News.objects.get(pk=4)
<News: Новость 4>
>>> news4 = _
>>> news4
<News: Новость 4>
>>> news4.title = 'News 4'
>>> news4.save()
DELETE
>>> news6 = News.objects.get(pk=6)
>>> news6.delete()
(1, {'news.News': 1})
#
>>> News.objects.all()
<QuerySet [<News: Новость 1>, <News: Новость 2>, <News: Новость 3>, <News: News 4>, <News: Новость 5>]>
>>> News.objects.order_by().all()
<QuerySet [<News: Новость 1>, <News: Новость 2>, <News: Новость 3>, <News: News 4>, <News: Новость 5>]>
>>> News.objects.order_by('title')
<QuerySet [<News: News 4>, <News: Новость 1>, <News: Новость 2>, <News: Новость 3>, <News: Новость 5>]>
>>> News.objects.order_by('-title')
<QuerySet [<News: Новость 5>, <News: Новость 3>, <News: Новость 2>, <News: Новость 1>, <News: News 4>]>
>>> News.objects.exclude(title='News 4')
<QuerySet [<News: Новость 1>, <News: Новость 2>, <News: Новость 3>, <News: Новость 5>]>
########################################################################




Templates
#####################################21
from .models import News
/news/views.py
############################22 
def index(request):
    news = News.objects.all()
    res = '<h1>Список новостей</h1>'
    for item in news:
        res += f'<div>\n<p>{item.title}</p>\n<p>{item.content}</p>\n</div>\n<hr>\n'
    return HttpResponse(res)
/news/templates/news/index.html
/news/views.py
#############################23
# def index(request):
#     news = News.objects.all()
#     return render(request, 'news/index.html', {'news' : news, 'title' : 'Список новостей'})
urlpatterns = [
############################24
    path('', index),
]
/news/templates/news/index.html
<!--1-->
<!--<!DOCTYPE html>-->
<!--<html lang="en">-->
<!--<head>-->
<!--    <meta charset="UTF-8">-->
<!--    <title>{{ title }}</title>-->
<!--</head>-->
<!--<body>-->
<!--<h1>{{ title }}</h1>-->
<!--{{ news }}-->

<!--</body>-->
<!--</html>-->

<!--2-->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>{{ title }}</title>
</head>
<body>

<h1>{{ title }}</h1>

{% for item in news %}
<div>
    <p>{{ item.title }}</p>
    <p>{{ item.content }}</p>
    <p>{{ item.created_at|date:"Y-m-d H:i:s" }}</p>
</div>
<hr>
{% endfor %}

</body>
</html>
/news/views.py
# #############################25
# def index(request):
#     news = News.objects.all()
#     context = {
#         'news': news,
#         'title': 'Список новостей'
#     }
#     return render(request, template_name='news/index.html', context=context)
#############################26
def index(request):
    news = News.objects.order_by('-created_at')
    context = {
        'news': news,
        'title': 'Список новостей'
    }
    return render(request, template_name='news/index.html', context=context)
#############################################################



Admin
python manage.py createsuperuser
Вход в админку
/news/admin.py
#################################27
admin.site.register(News)
#################################28
from .models import News
/news/models.py
###################################29
    class Meta:
        verbose_name = 'Новость'
        verbose_name_plural = 'Новости'
	ordering = ['-created_at']
/news/views.py
#############################30
def index(request):
    news = News.objects.all()
    context = {
        'news': news,
        'title': 'Список новостей'
    }
    return render(request, template_name='news/index.html', context=context)
/news/apps.py
#################################31
class NewsConfig(AppConfig):
    name = 'news'
    verbose_name = 'Новости'
/news/admin.py
##################################32
class NewsAdmin(admin.ModelAdmin):
    list_display = ('id', 'title', 'created_at', 'update_at', 'is_published')

#################################33
admin.site.register(News, NewsAdmin)
/news/models.py
###################################34
class News(models.Model):
    title = models.CharField(max_length=150, verbose_name='Наименование') #varchar 255
    content = models.TextField(blank=True, verbose_name='Контент') #не обяз к заполнению
    created_at = models.DateTimeField(auto_now_add=True, verbose_name='Дата публикации') #значение поля меняться не будет
    update_at = models.DateTimeField(auto_now=True, verbose_name='Обновлено')  #когда в последнее время менялась запись
    photo = models.ImageField(upload_to='photos/%Y/%m/%d', verbose_name='Фото') #будет создан файл картинки с годом месяцем и днем создания
    is_published = models.BooleanField(default=True, verbose_name='Опубликовано')
    
/news/admin.py
##################################35
class NewsAdmin(admin.ModelAdmin):
    list_display = ('id', 'title', 'created_at', 'update_at', 'is_published')
    list_display_links = ('id', 'title')
    search_fields = ('title', 'content')
Из админки на сайте создаем новость и добавляем картинку появится папка /media/photos/2020/02/24/и картинка.jpg
/news/models/py
###################################36
class News(models.Model):
    title = models.CharField(max_length=150, verbose_name='Наименование') #varchar 255
    content = models.TextField(blank=True, verbose_name='Контент') #не обяз к заполнению
    created_at = models.DateTimeField(auto_now_add=True, verbose_name='Дата публикации') #значение поля меняться не будет
    update_at = models.DateTimeField(auto_now=True, verbose_name='Обновлено')  #когда в последнее время менялась запись
    photo = models.ImageField(upload_to='photos/%Y/%m/%d', verbose_name='Фото', blank=True) #будет создан файл картинки с годом месяцем и днем создания
    is_published = models.BooleanField(default=True, verbose_name='Опубликовано')
python manage.py makemigrations
python manage.py migrate
#######################################################



Связи моделей
/news/models.py
###################################37
class Category(models.Model):
    title = models.CharField(max_length=155, db_index=True, verbose_name='Наименование категории')

    class Meta:
        verbose_name = 'Категория'
        verbose_name_plural = 'Категории'
        ordering = ['title']

class News(models.Model):
    title = models.CharField(max_length=150, verbose_name='Наименование') #varchar 255
    content = models.TextField(blank=True, verbose_name='Контент') #не обяз к заполнению
    created_at = models.DateTimeField(auto_now_add=True, verbose_name='Дата публикации') #значение поля меняться не будет
    update_at = models.DateTimeField(auto_now=True, verbose_name='Обновлено')  #когда в последнее время менялась запись
    photo = models.ImageField(upload_to='photos/%Y/%m/%d', verbose_name='Фото', blank=True) #будет создан файл картинки с годом месяцем и днем создания
    is_published = models.BooleanField(default=True, verbose_name='Опубликовано')
    ##########################################38
    category = models.ForeignKey('Category', on_delete=models.PROTECT, null=True, default=1)
    
python manage.py makemigrations
python manage.py migrate
Ошибка из-за default=1
class News(models.Model):
    title = models.CharField(max_length=150, verbose_name='Наименование') #varchar 255
    content = models.TextField(blank=True, verbose_name='Контент') #не обяз к заполнению
    created_at = models.DateTimeField(auto_now_add=True, verbose_name='Дата публикации') #значение поля меняться не будет
    update_at = models.DateTimeField(auto_now=True, verbose_name='Обновлено')  #когда в последнее время менялась запись
    photo = models.ImageField(upload_to='photos/%Y/%m/%d', verbose_name='Фото', blank=True) #будет создан файл картинки с годом месяцем и днем создания
    is_published = models.BooleanField(default=True, verbose_name='Опубликовано')
    # ##########################################38
    # category = models.ForeignKey('Category', on_delete=models.PROTECT, null=True, default=1)
    ##########################################39
    category = models.ForeignKey('Category', on_delete=models.PROTECT, null=True)

python manage.py makemigrations
python manage.py migrate
Ошибка из-за предыдушей миграции
Удалить  
0003_-миграцию
0004_-миграцию
python manage.py makemigrations
python manage.py migrate
/news/admin.py
#################################40
from .models import News, Category
#################################41
admin.site.register(News, NewsAdmin)
admin.site.register(Category, CategoryAdmin)
##################################42
class CategoryAdmin(admin.ModelAdmin):
    list_display = ('id', 'title')
    list_display_links = ('id', 'title')
    search_fields = ('title',)
На сайте в админке создаем категории Спорт политика наука и тд 
/news/models.py
###################################43
    def __str__(self):
        return self.title  # Возвращает строковое состояние объекта
На сайте в админке создаем новость
##################################44
class NewsAdmin(admin.ModelAdmin):
    list_display = ('id', 'title', 'category', 'created_at', 'update_at', 'is_published')
    list_display_links = ('id', 'title')
    search_fields = ('title', 'content')
/news/models.py
##########################################45
    category = models.ForeignKey('Category', on_delete=models.PROTECT, null=True, verbose_name='Категория')
/news/admin.py
class NewsAdmin(admin.ModelAdmin):
    list_display = ('id', 'title', 'category', 'created_at', 'update_at', 'is_published')
    list_display_links = ('id', 'title')
    search_fields = ('title', 'content')
    #############################################46
    list_editable = ('is_published',)
    list_filter = ('is_published', 'category')
########################################################




Внешний вид шаблона
getbootstrap.com
get started
starter temlate
/news/templates/news/index.html



<!--3-->
<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BmbxuPwQa2lc/FVzBcNJ7UAyJxM6wuqIj61tLrc4wSX0szH/Ev+nYRRuWlolflfl" crossorigin="anonymous">
    <title>{{ title }}</title>

  </head>
  <body>
    <h1>Hello, world!</h1>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta2/dist/js/bootstrap.bundle.min.js" integrity="sha384-b5kHyXgcpbZJO/tY9Ul7kGkf1S0CWuKcCD38l8YkeH8z8QjE0GmW1gYU5S9FOnJ0" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.6.0/dist/umd/popper.min.js" integrity="sha384-KsvD1yqQ1/1+IA7gi3P0tyJcT3vR+NdBTt13hSJ2lnve8agRGXTTyNaBYmCR/Nwi" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta2/dist/js/bootstrap.min.js" integrity="sha384-nsg8ua9HAw1y0W1btsyWgBklPnCUAFLuTMS2G72MMONqmOymq585AcH49TLBQObG" crossorigin="anonymous"></script>
  </body>
</html>



getbootstrap.com/components/navbar/


<!--4-->
<!--<!doctype html>-->
<!--<html lang="en">-->
<!--<head>-->

<!--  <meta charset="utf-8">-->
<!--  <meta name="viewport" content="width=device-width, initial-scale=1">-->


<!--  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta2/dist/css/bootstrap.min.css" rel="stylesheet"-->
<!--        integrity="sha384-BmbxuPwQa2lc/FVzBcNJ7UAyJxM6wuqIj61tLrc4wSX0szH/Ev+nYRRuWlolflfl" crossorigin="anonymous">-->

<!--  <title>{{ title }}</title>-->
<!--</head>-->
<!--<body>-->
<!--<nav class="navbar navbar-expand-lg navbar-light bg-light">-->
<!--  <div class="container-fluid">-->
<!--    <a class="navbar-brand" href="#">Navbar</a>-->
<!--    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">-->
<!--      <span class="navbar-toggler-icon"></span>-->
<!--    </button>-->
<!--    <div class="collapse navbar-collapse" id="navbarSupportedContent">-->
<!--      <ul class="navbar-nav me-auto mb-2 mb-lg-0">-->
<!--        <li class="nav-item">-->
<!--          <a class="nav-link active" aria-current="page" href="#">Home</a>-->
<!--        </li>-->
<!--        <li class="nav-item">-->
<!--          <a class="nav-link" href="#">Link</a>-->
<!--        </li>-->
<!--        <li class="nav-item dropdown">-->
<!--          <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">-->
<!--            Dropdown-->
<!--          </a>-->
<!--          <ul class="dropdown-menu" aria-labelledby="navbarDropdown">-->
<!--            <li><a class="dropdown-item" href="#">Action</a></li>-->
<!--            <li><a class="dropdown-item" href="#">Another action</a></li>-->
<!--            <li><hr class="dropdown-divider"></li>-->
<!--            <li><a class="dropdown-item" href="#">Something else here</a></li>-->
<!--          </ul>-->
<!--        </li>-->
<!--        <li class="nav-item">-->
<!--          <a class="nav-link disabled" href="#" tabindex="-1" aria-disabled="true">Disabled</a>-->
<!--        </li>-->
<!--      </ul>-->
<!--      <form class="d-flex">-->
<!--        <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search">-->
<!--        <button class="btn btn-outline-success" type="submit">Search</button>-->
<!--      </form>-->
<!--    </div>-->
<!--  </div>-->
<!--</nav>-->

<!--<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta2/dist/js/bootstrap.bundle.min.js"-->
<!--        integrity="sha384-b5kHyXgcpbZJO/tY9Ul7kGkf1S0CWuKcCD38l8YkeH8z8QjE0GmW1gYU5S9FOnJ0"-->
<!--        crossorigin="anonymous"></script>-->
<!--<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.6.0/dist/umd/popper.min.js"-->
<!--        integrity="sha384-KsvD1yqQ1/1+IA7gi3P0tyJcT3vR+NdBTt13hSJ2lnve8agRGXTTyNaBYmCR/Nwi"-->
<!--        crossorigin="anonymous"></script>-->
<!--<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta2/dist/js/bootstrap.min.js"-->
<!--        integrity="sha384-nsg8ua9HAw1y0W1btsyWgBklPnCUAFLuTMS2G72MMONqmOymq585AcH49TLBQObG"-->
<!--        crossorigin="anonymous"></script>-->

<!--</body>-->
<!--</html>-->

<!--5-->
<!doctype html>
<html lang="en">
<head>

  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">


  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta2/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-BmbxuPwQa2lc/FVzBcNJ7UAyJxM6wuqIj61tLrc4wSX0szH/Ev+nYRRuWlolflfl" crossorigin="anonymous">

  <title>{{ title }}</title>
</head>
<body>
<nav class="navbar navbar-expand-lg navbar-light bg-light">
  <div class="container-fluid">
    <a class="navbar-brand" href="/">Navbar</a>
    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent"
            aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>
    
    <div class="collapse navbar-collapse" id="navbarSupportedContent">
      <ul class="navbar-nav me-auto mb-2 mb-lg-0">
        <li class="nav-item"><a class="nav-link" href="/">Главная</a></li>
        <li class="nav-item"><a class="nav-link" href="/">Добавить новость</a></li>
      </ul>
    </div>
  </div>
</nav>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta2/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-b5kHyXgcpbZJO/tY9Ul7kGkf1S0CWuKcCD38l8YkeH8z8QjE0GmW1gYU5S9FOnJ0"
        crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.6.0/dist/umd/popper.min.js"
        integrity="sha384-KsvD1yqQ1/1+IA7gi3P0tyJcT3vR+NdBTt13hSJ2lnve8agRGXTTyNaBYmCR/Nwi"
        crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta2/dist/js/bootstrap.min.js"
        integrity="sha384-nsg8ua9HAw1y0W1btsyWgBklPnCUAFLuTMS2G72MMONqmOymq585AcH49TLBQObG"
        crossorigin="anonymous"></script>

</body>
</html>



getbootstrap.com/components/card/


<!--6-->
<!doctype html>
<html lang="en">
<head>

  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">


  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta2/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-BmbxuPwQa2lc/FVzBcNJ7UAyJxM6wuqIj61tLrc4wSX0szH/Ev+nYRRuWlolflfl" crossorigin="anonymous">

  <title>{{ title }}</title>
</head>
<body>
<nav class="navbar navbar-expand-lg navbar-light bg-light">
  <div class="container-fluid">
    <a class="navbar-brand" href="/">Navbar</a>
    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent"
            aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>

    <div class="collapse navbar-collapse" id="navbarSupportedContent">
      <ul class="navbar-nav me-auto mb-2 mb-lg-0">
        <li class="nav-item"><a class="nav-link" href="/">Главная</a></li>
        <li class="nav-item"><a class="nav-link" href="/">Добавить новость</a></li>
      </ul>
    </div>
  </div>
</nav>

<div class="container mb-3">
  <h1>{{ title }}</h1>
  <div class="row">
    <div class="col-md-12">
      {% for item in news %}
        <div class="card mb-3">
          <div class="card-header">
            Категория: {{ item.category }}
          </div>
          <div class="card-body">
            <h5 class="card-title">{{item.title}}</h5>
            <p class="card-text">{{item.content}}</p>
            <a href="#" class="btn btn-primary">Read more...</a>
          </div>
          <div class="card-footer text-muted">
            {{item.created_at|date:"Y-m-d H:i:s"}}
          </div>
        </div>
        {% endfor %}
      </div>
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta2/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-b5kHyXgcpbZJO/tY9Ul7kGkf1S0CWuKcCD38l8YkeH8z8QjE0GmW1gYU5S9FOnJ0"
        crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.6.0/dist/umd/popper.min.js"
        integrity="sha384-KsvD1yqQ1/1+IA7gi3P0tyJcT3vR+NdBTt13hSJ2lnve8agRGXTTyNaBYmCR/Nwi"
        crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta2/dist/js/bootstrap.min.js"
        integrity="sha384-nsg8ua9HAw1y0W1btsyWgBklPnCUAFLuTMS2G72MMONqmOymq585AcH49TLBQObG"
        crossorigin="anonymous"></script>

</body>
</html>

loremipsum.com взять текст и пополнить им контент через админку
################################################################



Директивы и теги ч1
Встроенные шаблоны пройтись по каждому
https://djbook.ru/rel1.9/ref/templates/builtins.html
/news/models.py
 #########################################47
    def my_func(self):
        return 'Hello from model'
/news/templates/news.index.html

1
<div class="card-header">
<!--            Директивы и теги ч11-->
            {{ item.my_func }}
            Категория: {{ item.category }}
          </div>

В админке добавляем текст <h1>Content</h1>
 
 
2
<div class="card-body">
            <h5 class="card-title">{{item.title}}</h5>
            <!--            Директивы и теги ч12-->
            {% autoescape off %}
            <p class="card-text">{{item.content}}</p>
            {% endautoescape %}
            <a href="#" class="btn btn-primary">Read more...</a>
          </div>
          
3          
<!--            Директивы и теги ч13-->
<!--            <h5 class="card-title {% cycle 'text-danger' 'text-success' %}">{{item.title}}</h5>-->


4
<div class="card-header">
            <!--            Директивы и теги ч14-->
<!--            {{ forloop.counter }}-->
            Категория: {{ item.category }}
          </div>


5
<div class="card-header">
            <!--            Директивы и теги ч15-->
<!--            {{ forloop.counter reversed }}-->
            Категория: {{ item.category }}
          </div>


6
{% for item in news2 %} - если таких нет
<!--            Директивы и теги ч16-->
{% empty %}
	oops... - тогда выйдет такое сообщение
{% endfor %}



7

<!--            Директивы и теги ч17-->
{% now "Y-m-d H:i:s" %}
##################################################################



Директивы, теги и фильтры ч2


























